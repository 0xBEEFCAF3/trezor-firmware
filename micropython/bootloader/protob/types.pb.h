/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 */

#ifndef PB_TYPES_PB_H_INCLUDED
#define PB_TYPES_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _FailureType {
    FailureType_Failure_UnexpectedMessage = 1,
    FailureType_Failure_ButtonExpected = 2,
    FailureType_Failure_SyntaxError = 3,
    FailureType_Failure_ActionCancelled = 4,
    FailureType_Failure_PinExpected = 5,
    FailureType_Failure_PinCancelled = 6,
    FailureType_Failure_PinInvalid = 7,
    FailureType_Failure_InvalidSignature = 8,
    FailureType_Failure_Other = 9,
    FailureType_Failure_NotEnoughFunds = 10,
    FailureType_Failure_NotInitialized = 11,
    FailureType_Failure_FirmwareError = 99
} FailureType;
#define _FailureType_MIN FailureType_Failure_UnexpectedMessage
#define _FailureType_MAX FailureType_Failure_FirmwareError
#define _FailureType_ARRAYSIZE ((FailureType)(FailureType_Failure_FirmwareError+1))

typedef enum _OutputScriptType {
    OutputScriptType_PAYTOADDRESS = 0,
    OutputScriptType_PAYTOSCRIPTHASH = 1,
    OutputScriptType_PAYTOMULTISIG = 2,
    OutputScriptType_PAYTOOPRETURN = 3,
    OutputScriptType_PAYTOWITNESS = 4,
    OutputScriptType_PAYTOP2SHWITNESS = 5
} OutputScriptType;
#define _OutputScriptType_MIN OutputScriptType_PAYTOADDRESS
#define _OutputScriptType_MAX OutputScriptType_PAYTOP2SHWITNESS
#define _OutputScriptType_ARRAYSIZE ((OutputScriptType)(OutputScriptType_PAYTOP2SHWITNESS+1))

typedef enum _InputScriptType {
    InputScriptType_SPENDADDRESS = 0,
    InputScriptType_SPENDMULTISIG = 1,
    InputScriptType_EXTERNAL = 2,
    InputScriptType_SPENDWITNESS = 3,
    InputScriptType_SPENDP2SHWITNESS = 4
} InputScriptType;
#define _InputScriptType_MIN InputScriptType_SPENDADDRESS
#define _InputScriptType_MAX InputScriptType_SPENDP2SHWITNESS
#define _InputScriptType_ARRAYSIZE ((InputScriptType)(InputScriptType_SPENDP2SHWITNESS+1))

typedef enum _RequestType {
    RequestType_TXINPUT = 0,
    RequestType_TXOUTPUT = 1,
    RequestType_TXMETA = 2,
    RequestType_TXFINISHED = 3,
    RequestType_TXEXTRADATA = 4
} RequestType;
#define _RequestType_MIN RequestType_TXINPUT
#define _RequestType_MAX RequestType_TXEXTRADATA
#define _RequestType_ARRAYSIZE ((RequestType)(RequestType_TXEXTRADATA+1))

typedef enum _ButtonRequestType {
    ButtonRequestType_ButtonRequest_Other = 1,
    ButtonRequestType_ButtonRequest_FeeOverThreshold = 2,
    ButtonRequestType_ButtonRequest_ConfirmOutput = 3,
    ButtonRequestType_ButtonRequest_ResetDevice = 4,
    ButtonRequestType_ButtonRequest_ConfirmWord = 5,
    ButtonRequestType_ButtonRequest_WipeDevice = 6,
    ButtonRequestType_ButtonRequest_ProtectCall = 7,
    ButtonRequestType_ButtonRequest_SignTx = 8,
    ButtonRequestType_ButtonRequest_FirmwareCheck = 9,
    ButtonRequestType_ButtonRequest_Address = 10,
    ButtonRequestType_ButtonRequest_PublicKey = 11
} ButtonRequestType;
#define _ButtonRequestType_MIN ButtonRequestType_ButtonRequest_Other
#define _ButtonRequestType_MAX ButtonRequestType_ButtonRequest_PublicKey
#define _ButtonRequestType_ARRAYSIZE ((ButtonRequestType)(ButtonRequestType_ButtonRequest_PublicKey+1))

typedef enum _PinMatrixRequestType {
    PinMatrixRequestType_PinMatrixRequestType_Current = 1,
    PinMatrixRequestType_PinMatrixRequestType_NewFirst = 2,
    PinMatrixRequestType_PinMatrixRequestType_NewSecond = 3
} PinMatrixRequestType;
#define _PinMatrixRequestType_MIN PinMatrixRequestType_PinMatrixRequestType_Current
#define _PinMatrixRequestType_MAX PinMatrixRequestType_PinMatrixRequestType_NewSecond
#define _PinMatrixRequestType_ARRAYSIZE ((PinMatrixRequestType)(PinMatrixRequestType_PinMatrixRequestType_NewSecond+1))

typedef enum _RecoveryDeviceType {
    RecoveryDeviceType_RecoveryDeviceType_ScrambledWords = 0,
    RecoveryDeviceType_RecoveryDeviceType_Matrix = 1
} RecoveryDeviceType;
#define _RecoveryDeviceType_MIN RecoveryDeviceType_RecoveryDeviceType_ScrambledWords
#define _RecoveryDeviceType_MAX RecoveryDeviceType_RecoveryDeviceType_Matrix
#define _RecoveryDeviceType_ARRAYSIZE ((RecoveryDeviceType)(RecoveryDeviceType_RecoveryDeviceType_Matrix+1))

typedef enum _WordRequestType {
    WordRequestType_WordRequestType_Plain = 0,
    WordRequestType_WordRequestType_Matrix9 = 1,
    WordRequestType_WordRequestType_Matrix6 = 2
} WordRequestType;
#define _WordRequestType_MIN WordRequestType_WordRequestType_Plain
#define _WordRequestType_MAX WordRequestType_WordRequestType_Matrix6
#define _WordRequestType_ARRAYSIZE ((WordRequestType)(WordRequestType_WordRequestType_Matrix6+1))

/* Struct definitions */
typedef struct _CoinType {
    pb_callback_t coin_name;
    pb_callback_t coin_shortcut;
    bool has_address_type;
    uint32_t address_type;
    bool has_maxfee_kb;
    uint64_t maxfee_kb;
    bool has_address_type_p2sh;
    uint32_t address_type_p2sh;
    pb_callback_t signed_message_header;
    bool has_xpub_magic;
    uint32_t xpub_magic;
    bool has_xprv_magic;
    uint32_t xprv_magic;
    bool has_segwit;
    bool segwit;
/* @@protoc_insertion_point(struct:CoinType) */
} CoinType;

typedef struct _HDNodeType {
    uint32_t depth;
    uint32_t fingerprint;
    uint32_t child_num;
    pb_callback_t chain_code;
    pb_callback_t private_key;
    pb_callback_t public_key;
/* @@protoc_insertion_point(struct:HDNodeType) */
} HDNodeType;

typedef struct _IdentityType {
    pb_callback_t proto;
    pb_callback_t user;
    pb_callback_t host;
    pb_callback_t port;
    pb_callback_t path;
    bool has_index;
    uint32_t index;
/* @@protoc_insertion_point(struct:IdentityType) */
} IdentityType;

typedef struct _MultisigRedeemScriptType {
    pb_callback_t pubkeys;
    pb_callback_t signatures;
    bool has_m;
    uint32_t m;
/* @@protoc_insertion_point(struct:MultisigRedeemScriptType) */
} MultisigRedeemScriptType;

typedef struct _TransactionType {
    bool has_version;
    uint32_t version;
    pb_callback_t inputs;
    pb_callback_t bin_outputs;
    bool has_lock_time;
    uint32_t lock_time;
    pb_callback_t outputs;
    bool has_inputs_cnt;
    uint32_t inputs_cnt;
    bool has_outputs_cnt;
    uint32_t outputs_cnt;
    pb_callback_t extra_data;
    bool has_extra_data_len;
    uint32_t extra_data_len;
/* @@protoc_insertion_point(struct:TransactionType) */
} TransactionType;

typedef struct _TxOutputBinType {
    uint64_t amount;
    pb_callback_t script_pubkey;
/* @@protoc_insertion_point(struct:TxOutputBinType) */
} TxOutputBinType;

typedef struct _TxRequestDetailsType {
    bool has_request_index;
    uint32_t request_index;
    pb_callback_t tx_hash;
    bool has_extra_data_len;
    uint32_t extra_data_len;
    bool has_extra_data_offset;
    uint32_t extra_data_offset;
/* @@protoc_insertion_point(struct:TxRequestDetailsType) */
} TxRequestDetailsType;

typedef struct _TxRequestSerializedType {
    bool has_signature_index;
    uint32_t signature_index;
    pb_callback_t signature;
    pb_callback_t serialized_tx;
/* @@protoc_insertion_point(struct:TxRequestSerializedType) */
} TxRequestSerializedType;

typedef struct _HDNodePathType {
    HDNodeType node;
    pb_callback_t address_n;
/* @@protoc_insertion_point(struct:HDNodePathType) */
} HDNodePathType;

typedef struct _TxInputType {
    pb_callback_t address_n;
    pb_callback_t prev_hash;
    uint32_t prev_index;
    pb_callback_t script_sig;
    bool has_sequence;
    uint32_t sequence;
    bool has_script_type;
    InputScriptType script_type;
    bool has_multisig;
    MultisigRedeemScriptType multisig;
    bool has_amount;
    uint64_t amount;
/* @@protoc_insertion_point(struct:TxInputType) */
} TxInputType;

typedef struct _TxOutputType {
    pb_callback_t address;
    pb_callback_t address_n;
    uint64_t amount;
    OutputScriptType script_type;
    bool has_multisig;
    MultisigRedeemScriptType multisig;
    pb_callback_t op_return_data;
/* @@protoc_insertion_point(struct:TxOutputType) */
} TxOutputType;

/* Extensions */
extern const pb_extension_type_t wire_in; /* field type: bool wire_in; */
extern const pb_extension_type_t wire_out; /* field type: bool wire_out; */
extern const pb_extension_type_t wire_debug_in; /* field type: bool wire_debug_in; */
extern const pb_extension_type_t wire_debug_out; /* field type: bool wire_debug_out; */
extern const pb_extension_type_t wire_tiny; /* field type: bool wire_tiny; */
extern const pb_extension_type_t wire_bootloader; /* field type: bool wire_bootloader; */

/* Default values for struct fields */
extern const uint32_t CoinType_address_type_default;
extern const uint32_t CoinType_address_type_p2sh_default;
extern const uint32_t CoinType_xpub_magic_default;
extern const uint32_t CoinType_xprv_magic_default;
extern const uint32_t TxInputType_sequence_default;
extern const InputScriptType TxInputType_script_type_default;
extern const uint32_t IdentityType_index_default;

/* Initializer values for message structs */
#define HDNodeType_init_default                  {0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define HDNodePathType_init_default              {HDNodeType_init_default, {{NULL}, NULL}}
#define CoinType_init_default                    {{{NULL}, NULL}, {{NULL}, NULL}, false, 0u, false, 0, false, 5u, {{NULL}, NULL}, false, 76067358u, false, 76066276u, false, 0}
#define MultisigRedeemScriptType_init_default    {{{NULL}, NULL}, {{NULL}, NULL}, false, 0}
#define TxInputType_init_default                 {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, false, 4294967295u, false, InputScriptType_SPENDADDRESS, false, MultisigRedeemScriptType_init_default, false, 0}
#define TxOutputType_init_default                {{{NULL}, NULL}, {{NULL}, NULL}, 0, (OutputScriptType)0, false, MultisigRedeemScriptType_init_default, {{NULL}, NULL}}
#define TxOutputBinType_init_default             {0, {{NULL}, NULL}}
#define TransactionType_init_default             {false, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, false, 0, false, 0, {{NULL}, NULL}, false, 0}
#define TxRequestDetailsType_init_default        {false, 0, {{NULL}, NULL}, false, 0, false, 0}
#define TxRequestSerializedType_init_default     {false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define IdentityType_init_default                {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, 0u}
#define HDNodeType_init_zero                     {0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define HDNodePathType_init_zero                 {HDNodeType_init_zero, {{NULL}, NULL}}
#define CoinType_init_zero                       {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, 0, false, 0, {{NULL}, NULL}, false, 0, false, 0, false, 0}
#define MultisigRedeemScriptType_init_zero       {{{NULL}, NULL}, {{NULL}, NULL}, false, 0}
#define TxInputType_init_zero                    {{{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, false, 0, false, (InputScriptType)0, false, MultisigRedeemScriptType_init_zero, false, 0}
#define TxOutputType_init_zero                   {{{NULL}, NULL}, {{NULL}, NULL}, 0, (OutputScriptType)0, false, MultisigRedeemScriptType_init_zero, {{NULL}, NULL}}
#define TxOutputBinType_init_zero                {0, {{NULL}, NULL}}
#define TransactionType_init_zero                {false, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, false, 0, false, 0, {{NULL}, NULL}, false, 0}
#define TxRequestDetailsType_init_zero           {false, 0, {{NULL}, NULL}, false, 0, false, 0}
#define TxRequestSerializedType_init_zero        {false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define IdentityType_init_zero                   {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define CoinType_coin_name_tag                   1
#define CoinType_coin_shortcut_tag               2
#define CoinType_address_type_tag                3
#define CoinType_maxfee_kb_tag                   4
#define CoinType_address_type_p2sh_tag           5
#define CoinType_signed_message_header_tag       8
#define CoinType_xpub_magic_tag                  9
#define CoinType_xprv_magic_tag                  10
#define CoinType_segwit_tag                      11
#define HDNodeType_depth_tag                     1
#define HDNodeType_fingerprint_tag               2
#define HDNodeType_child_num_tag                 3
#define HDNodeType_chain_code_tag                4
#define HDNodeType_private_key_tag               5
#define HDNodeType_public_key_tag                6
#define IdentityType_proto_tag                   1
#define IdentityType_user_tag                    2
#define IdentityType_host_tag                    3
#define IdentityType_port_tag                    4
#define IdentityType_path_tag                    5
#define IdentityType_index_tag                   6
#define MultisigRedeemScriptType_pubkeys_tag     1
#define MultisigRedeemScriptType_signatures_tag  2
#define MultisigRedeemScriptType_m_tag           3
#define TransactionType_version_tag              1
#define TransactionType_inputs_tag               2
#define TransactionType_bin_outputs_tag          3
#define TransactionType_outputs_tag              5
#define TransactionType_lock_time_tag            4
#define TransactionType_inputs_cnt_tag           6
#define TransactionType_outputs_cnt_tag          7
#define TransactionType_extra_data_tag           8
#define TransactionType_extra_data_len_tag       9
#define TxOutputBinType_amount_tag               1
#define TxOutputBinType_script_pubkey_tag        2
#define TxRequestDetailsType_request_index_tag   1
#define TxRequestDetailsType_tx_hash_tag         2
#define TxRequestDetailsType_extra_data_len_tag  3
#define TxRequestDetailsType_extra_data_offset_tag 4
#define TxRequestSerializedType_signature_index_tag 1
#define TxRequestSerializedType_signature_tag    2
#define TxRequestSerializedType_serialized_tx_tag 3
#define HDNodePathType_node_tag                  1
#define HDNodePathType_address_n_tag             2
#define TxInputType_address_n_tag                1
#define TxInputType_prev_hash_tag                2
#define TxInputType_prev_index_tag               3
#define TxInputType_script_sig_tag               4
#define TxInputType_sequence_tag                 5
#define TxInputType_script_type_tag              6
#define TxInputType_multisig_tag                 7
#define TxInputType_amount_tag                   8
#define TxOutputType_address_tag                 1
#define TxOutputType_address_n_tag               2
#define TxOutputType_amount_tag                  3
#define TxOutputType_script_type_tag             4
#define TxOutputType_multisig_tag                5
#define TxOutputType_op_return_data_tag          6
#define wire_in_tag                              50002
#define wire_out_tag                             50003
#define wire_debug_in_tag                        50004
#define wire_debug_out_tag                       50005
#define wire_tiny_tag                            50006
#define wire_bootloader_tag                      50007

/* Struct field encoding specification for nanopb */
extern const pb_field_t HDNodeType_fields[7];
extern const pb_field_t HDNodePathType_fields[3];
extern const pb_field_t CoinType_fields[10];
extern const pb_field_t MultisigRedeemScriptType_fields[4];
extern const pb_field_t TxInputType_fields[9];
extern const pb_field_t TxOutputType_fields[7];
extern const pb_field_t TxOutputBinType_fields[3];
extern const pb_field_t TransactionType_fields[10];
extern const pb_field_t TxRequestDetailsType_fields[5];
extern const pb_field_t TxRequestSerializedType_fields[4];
extern const pb_field_t IdentityType_fields[7];

/* Maximum encoded size of messages (where known) */
/* HDNodeType_size depends on runtime parameters */
/* HDNodePathType_size depends on runtime parameters */
/* CoinType_size depends on runtime parameters */
/* MultisigRedeemScriptType_size depends on runtime parameters */
/* TxInputType_size depends on runtime parameters */
/* TxOutputType_size depends on runtime parameters */
/* TxOutputBinType_size depends on runtime parameters */
/* TransactionType_size depends on runtime parameters */
/* TxRequestDetailsType_size depends on runtime parameters */
/* TxRequestSerializedType_size depends on runtime parameters */
/* IdentityType_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define TYPES_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
